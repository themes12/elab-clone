# Generated by Django 2.0.3 on 2018-03-22 07:40

import cms.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10)),
                ('name', models.CharField(help_text='The name of the course according to the course number.  Other information should be put in "note."', max_length=100)),
                ('note', models.CharField(blank=True, help_text="A one-line short note identifying this particular set of course material. Can be blank, if it's unique.", max_length=100)),
                ('comments', models.TextField(blank=True, help_text='More detailed explanation for "note."')),
                ('authors', models.ManyToManyField(help_text='A list of users that can edit this course materials.', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GradingSupplement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_file', models.FileField(upload_to='supplements/%Y/%m/%d')),
            ],
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('tags', models.CharField(blank=True, default='', help_text='A comma-separated list of tags. Each tag may contain spaces.', max_length=200)),
                ('disabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='LabInCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Course')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Lab')),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('note', models.CharField(blank=True, default='', help_text='A one-line summary of the task to be shown when lab designer selects tasks.', max_length=100)),
                ('source', models.TextField()),
                ('language', models.CharField(choices=[('python', 'python'), ('python3', 'python3'), ('csharp', 'csharp'), ('java', 'java'), ('c', 'c'), ('c++', 'c++'), ('c++11', 'c++11'), ('plaintext', 'plaintext'), ('makefile', 'makefile'), ('shellscript', 'shellscript')], max_length=20)),
                ('lang_options', models.TextField(blank=True)),
                ('html_template', models.TextField(blank=True)),
                ('code', cms.fields.CodeField(blank=True)),
                ('disabled', models.BooleanField(default=False)),
                ('version', models.IntegerField(default=1)),
                ('is_private', models.BooleanField(default=False, help_text='If checked, this task becomes private to its creator and owner')),
                ('tags', models.CharField(blank=True, default='', help_text='A comma-separated list of tags. Each tag may contain spaces.', max_length=200)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_created', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_owned', to=settings.AUTH_USER_MODEL)),
                ('previous_version', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.Task')),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_data', models.TextField()),
                ('solution', models.TextField(blank=True)),
                ('capture', models.TextField(blank=True, default=None, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Task')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TextBlank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blank_id', models.TextField(max_length=10)),
                ('solution', models.TextField(blank=True)),
                ('score', models.IntegerField(help_text='Full score')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Task')),
            ],
            options={
                'ordering': ['blank_id'],
            },
        ),
        migrations.AddField(
            model_name='gradingsupplement',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplement_set', to='cms.Task'),
        ),
        migrations.AddField(
            model_name='course',
            name='labs',
            field=models.ManyToManyField(through='cms.LabInCourse', to='cms.Lab'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='lab',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Lab'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Task'),
        ),
    ]
